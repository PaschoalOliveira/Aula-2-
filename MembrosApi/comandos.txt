Criacao de Webapi 
=================================================

dotnet new webapi -n MembrosApi
dotnet restore - Restaura as dependências
dotnet build - Compila o projeto
dotnet run
dotnet watch run
Caso de erro ( dotnet dev-certs https --trust)

====================================================
Git

Configurações :
    git config --global user.name "Fulano de Tal" (seu nome)
    git config --global user.email fulanodetal@exemplo.br (seu email)

Chave SSH :
    ssh-keygen -t ed25519 -C "your_email@example.com" (O comando criará uma nova chave SSH, usando o e-mail fornecido)
        Sua chave será salva no local padrao (esta pasta fica oculta tanto no windows quanto no linux)
        Digite uma frase secreta segura no prompt qnd for solicitado
    Copie sua chave para o git

Primeiros Passos :
    git clone /caminho/para/o/repositório (crie uma cópia de trabalho em um repositório local)
    git add . (adiciona)
    git commit -m "comentários das alterações" (confirmar estas mudanças realizadas)
    git -am commit "comentários das alterações" (adiciona e comita ao mesmo tempo)
    git push origin master (envia mudancas para ramo master)
    git pull (incorpora mudanças de um repositório remoto para o branch local.)

Reset Commit :
    git reset <numero do commit> (reseta o repositório para o estado do último commit. Arquivos nao sao alterados)
    git reset --hard <numero do commit> (Neste caso as alterações nos arquivos também serão desfeitas com o commit)
    git revert <numero do commit> (reverte commit mais antigo.Apagará todos os commits na frente deste)
    git reset --hard head (pega o primeiro commit)

Deletar branch :
    git branch -d nome-da-branch (remove branch local)
    git branch -D nome-da-branch (forcar remoção da branch local)
    git push origin --delete nome-da-branch (remove branch remota)

git branch -r (visualiza as branchs remotas)
git branch develop (cria uma branch chamada develop)

git fetch (download dos ultimos commits)
git fetch --all (irá atualizar todas as cópias locais de ramos remotos)

git checkout develop (indo para branch develop)
git diff <branch origem> <branch destino>  (antes de fazer o merge, podemos ve a diferenca)

git rm -r --cached . (você prepara um arquivo para remoção, mas não o remove do diretório de trabalho. O arquivo será mostrado como não rastreado)
git pull origin master --allow-unrelated-histories (qnd há conflitos de histories)

====================================================
Git flow

git flow init
git branch (apenas para verificacao de criacao)
git flow feature start “Busca de Membros” (starta uma nova feature)
git branch (apenas para verificacao de criacao)

Cria arquivo, commita
git push --set-upstream origin nome_feature
git flow feature finish nome_feature
git push --set-upstream origin develop
